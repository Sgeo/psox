THIS IS JUST A PROPOSAL, NOT AN OFFICIAL PART OF THE SPEC (YET)

Some functions may be deemed to be UNSAFE.
This means that they may have privacy implications, or that they may
change files around, etc. Examples include, but are not limited to,
network interactions, and reading and writing files. Such
functions must be noted as UNSAFE in the domain spec that they are in,
and must have a Safety Question String, a Safety Help String,
and a Safety Log String (explained later).

0x00 0x00 0x06 is the Predeclare Unsafe Functionality 
This function is optional, but may be useful for applications that can't have the safety
question be asked while the main program is running, or do not wish to have to repeatedly
ask the user to use a certain function

Note that throughout this spec, PUF refers to use of the function, not functions that
have been predeclared this way.

The format is: domain function 0x00
The 0x00 is there for future expansion.

Unsafe functions MUST, for the first byte, return a Safety status code. The byte is
0x00 if it failed because it's not allowed, or 0x01 if the function was allowed.
PUF also returns a safety byte with similar semantics, but 0x01 may also mean that the user selected 'ask'.

When PUF or an unpredeclared unsafe function is called, the server will print a newline,
then the question (explained later), then [yes/no/help]
if it's NOT a PUF (0x00 0x00 0x06), or [yes/no/ask/help] if this is.

Safety Strings:
The Safety Question String specifies what the question should be. It should, (if relevent),
point out where arguments may be prespecified via PUF and should be human readable: e.g.
"Allow this application to (create|rename|delete|do anything to) (file "X"|any file)?"

The Safety Help String describes the implications to the user of allowing something. 
It is used when the user responds with 'help' and does not need to be dynamic based
on whether anything is prespecified or not.

The Safety Log string describes what should be written down in the mandatory Safety Log.
The Safety Log is written to whenever an application attempts to execute an unsafe function,
and will have either ALLOWED or FAILED after it.. e.g.
"Attempted to (create|rename|delete) file "X". "
That may then be followed by ALLOWED or FAILED

